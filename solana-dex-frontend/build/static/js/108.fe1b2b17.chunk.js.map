{"version":3,"file":"static/js/108.fe1b2b17.chunk.js","mappings":"+KAGA,MACMA,EAAUC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,sBAEtBC,EAAgBC,EAAAA,EAAMC,OAAO,CACjCC,QAJ4B,OAK5BC,QAAS,CACP,oBAAqBP,K,aCNzB,MA2CA,EA3CqBQ,KACnB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAkBnC,OAhBAK,EAAAA,EAAAA,YAAU,KACYC,WAClB,IACE,MAAMC,EAAU,CAAC,MAAO,MAAO,OACzBC,ODCiBF,WAC7B,IACE,MAAMG,QAAiBjB,EAAckB,IAAI,gCAAiC,CACxEC,OAAQ,CACNC,OAAQL,EAAQM,KAAK,QAIzB,OADAC,QAAQC,IAAI,eAAgBN,EAASO,OAAOC,KACrCR,EAASD,KAAKA,IACvB,CAAE,MAAOL,GAEP,MADAW,QAAQX,MAAM,wCAAyCA,GACjDA,CACR,GCbyBe,CAAgBX,GACnCR,EAAUS,GACVN,GAAW,EACb,CAAE,MAAOC,GACPC,EAASD,GACTD,GAAW,EACb,GAGFiB,EAAa,GACZ,IAEClB,GACKmB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,sBAGRlB,GACKmB,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,0BAAwBlB,EAAMoB,YAIxCD,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,2BACJD,EAAAA,EAAAA,KAAA,MAAAC,SACGG,OAAOC,KAAK3B,GAAQ4B,KAAKd,IACxBU,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CACGT,EAAO,MAAId,EAAOc,GAAQe,MAAMC,IAAIC,MAAMC,QAAQ,KAD5ClB,SAKT,C","sources":["services/coinMarketCapService.js","components/CryptoPrices.js"],"sourcesContent":["// src/services/coinMarketCapService.js\nimport axios from 'axios';\n\nconst COINMARKETCAP_API_URL = '/api'; // Serverless function endpoint\nconst API_KEY = process.env.COINMARKETCAP_API_KEY; // Use environment variable\n\nconst axiosInstance = axios.create({\n  baseURL: COINMARKETCAP_API_URL,\n  headers: {\n    'X-CMC_PRO_API_KEY': API_KEY,\n  },\n});\n\nexport const getCryptoPrices = async (symbols) => {\n  try {\n    const response = await axiosInstance.get('/cryptocurrency/quotes/latest', {\n      params: {\n        symbol: symbols.join(','),\n      },\n    });\n    console.log('Request URL:', response.config.url); // Log the request URL\n    return response.data.data;\n  } catch (error) {\n    console.error('Error fetching cryptocurrency prices:', error);\n    throw error;\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { getCryptoPrices } from '../services/coinMarketCapService';\n\nconst CryptoPrices = () => {\n  const [prices, setPrices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPrices = async () => {\n      try {\n        const symbols = ['BTC', 'ETH', 'SOL']; // Add more symbols as needed\n        const data = await getCryptoPrices(symbols);\n        setPrices(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n\n    fetchPrices();\n  }, []);\n\n  if (loading) {\n    return <p>Loading prices...</p>;\n  }\n\n  if (error) {\n    return <p>Error fetching prices: {error.message}</p>;\n  }\n\n  return (\n    <div>\n      <h2>Cryptocurrency Prices</h2>\n      <ul>\n        {Object.keys(prices).map((symbol) => (\n          <li key={symbol}>\n            {symbol}: ${prices[symbol].quote.USD.price.toFixed(2)}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default CryptoPrices;\n"],"names":["API_KEY","process","COINMARKETCAP_API_KEY","axiosInstance","axios","create","baseURL","headers","CryptoPrices","prices","setPrices","useState","loading","setLoading","error","setError","useEffect","async","symbols","data","response","get","params","symbol","join","console","log","config","url","getCryptoPrices","fetchPrices","_jsx","children","_jsxs","message","Object","keys","map","quote","USD","price","toFixed"],"sourceRoot":""}