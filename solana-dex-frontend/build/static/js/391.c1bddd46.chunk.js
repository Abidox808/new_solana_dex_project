(self.webpackChunksolana_dex_frontend=self.webpackChunksolana_dex_frontend||[]).push([[391],{548:(e,a,n)=>{"use strict";n.r(a),n.d(a,{default:()=>o});var t=n(5043),r=n(1579),i=n(6782),c=n(675),s=n(579);const o=()=>{const{publicKey:e,signTransaction:a}=(0,r.v)(),[n,o]=(0,t.useState)(""),[l,d]=(0,t.useState)(""),[u,p]=(0,t.useState)("");return(0,s.jsxs)("div",{children:[(0,s.jsx)("h2",{children:"Limit Order"}),(0,s.jsx)("input",{type:"number",placeholder:"Price",value:n,onChange:e=>o(e.target.value)}),(0,s.jsx)("input",{type:"number",placeholder:"Amount",value:l,onChange:e=>d(e.target.value)}),(0,s.jsx)("button",{onClick:async()=>{if(!e)return void p("Connect your wallet first");const t=new i.Connection("https://api.mainnet-beta.solana.com"),r=new i.PublicKey("YOUR_MARKET_ADDRESS"),s=await c.Market.load(t,r,{},c.SERUM_PROGRAM_ID),o=e,d=e,[u]=await s.placeOrder({owner:o,payer:d,side:"buy",price:parseFloat(n),size:parseFloat(l),orderType:"limit",clientId:(new Date).getTime()}),h=(new i.Transaction).add(u),w=await a(h);try{const e=await t.sendRawTransaction(w.serialize());await t.confirmTransaction(e),p("Order placed: ".concat(e))}catch(m){p("Error placing order: ".concat(m.message))}},children:"Place Limit Order"}),(0,s.jsx)("p",{children:u})]})}},1799:()=>{}}]);
//# sourceMappingURL=391.c1bddd46.chunk.js.map