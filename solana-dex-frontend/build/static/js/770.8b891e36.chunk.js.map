{"version":3,"file":"static/js/770.8b891e36.chunk.js","mappings":"wLAGA,MAqCA,EArCiBA,KACf,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,MACfC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,KAC9BG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,IAYnD,OACEK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLC,YAAY,aACZC,MAAOZ,EACPa,SAAWC,GAAMb,EAAaa,EAAEC,OAAOH,UAEzCH,EAAAA,EAAAA,KAAA,SACEC,KAAK,SACLC,YAAY,SACZC,MAAOT,EACPU,SAAWC,GAAMV,EAAUU,EAAEC,OAAOH,UAEtCH,EAAAA,EAAAA,KAAA,UAAQO,QAzBWC,UAOrBX,EANKR,EAMY,kDALE,4BAKgD,EAkBjCU,SAAC,2BACjCC,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,MACA,C","sources":["components/StopLoss.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useWallet } from '@solana/wallet-adapter-react';\n\nconst StopLoss = () => {\n  const { publicKey } = useWallet();\n  const [stopPrice, setStopPrice] = useState('');\n  const [amount, setAmount] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n\n  const handleStopLoss = async () => {\n    if (!publicKey) {\n      setStatusMessage('Connect your wallet first');\n      return;\n    }\n\n    // Perform stop-loss logic here\n    setStatusMessage('Stop-Loss functionality is not implemented yet.');\n  };\n\n  return (\n    <div>\n      <h2>Stop-Loss</h2>\n      <input\n        type=\"number\"\n        placeholder=\"Stop Price\"\n        value={stopPrice}\n        onChange={(e) => setStopPrice(e.target.value)}\n      />\n      <input\n        type=\"number\"\n        placeholder=\"Amount\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n      />\n      <button onClick={handleStopLoss}>Place Stop-Loss Order</button>\n      <p>{statusMessage}</p>\n    </div>\n  );\n};\n\nexport default StopLoss;\n"],"names":["StopLoss","publicKey","useWallet","stopPrice","setStopPrice","useState","amount","setAmount","statusMessage","setStatusMessage","_jsxs","children","_jsx","type","placeholder","value","onChange","e","target","onClick","async"],"sourceRoot":""}