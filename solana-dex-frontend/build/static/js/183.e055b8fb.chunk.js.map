{"version":3,"file":"static/js/183.e055b8fb.chunk.js","mappings":"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","sources":["../node_modules/@ledgerhq/devices/src/hid-framing.ts","../node_modules/@ledgerhq/devices/src/index.ts","../node_modules/@ledgerhq/logs/src/index.ts","../node_modules/@solana/wallet-adapter-ledger/node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.ts","../node_modules/process/browser.js","../node_modules/semver/classes/comparator.js","../node_modules/semver/classes/range.js","../node_modules/semver/classes/semver.js","../node_modules/semver/functions/clean.js","../node_modules/semver/functions/cmp.js","../node_modules/semver/functions/coerce.js","../node_modules/semver/functions/compare-build.js","../node_modules/semver/functions/compare-loose.js","../node_modules/semver/functions/compare.js","../node_modules/semver/functions/diff.js","../node_modules/semver/functions/eq.js","../node_modules/semver/functions/gt.js","../node_modules/semver/functions/gte.js","../node_modules/semver/functions/inc.js","../node_modules/semver/functions/lt.js","../node_modules/semver/functions/lte.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/functions/neq.js","../node_modules/semver/functions/parse.js","../node_modules/semver/functions/patch.js","../node_modules/semver/functions/prerelease.js","../node_modules/semver/functions/rcompare.js","../node_modules/semver/functions/rsort.js","../node_modules/semver/functions/satisfies.js","../node_modules/semver/functions/sort.js","../node_modules/semver/functions/valid.js","../node_modules/semver/index.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/internal/lrucache.js","../node_modules/semver/internal/parse-options.js","../node_modules/semver/internal/re.js","../node_modules/semver/ranges/gtr.js","../node_modules/semver/ranges/intersects.js","../node_modules/semver/ranges/ltr.js","../node_modules/semver/ranges/max-satisfying.js","../node_modules/semver/ranges/min-satisfying.js","../node_modules/semver/ranges/min-version.js","../node_modules/semver/ranges/outside.js","../node_modules/semver/ranges/simplify.js","../node_modules/semver/ranges/subset.js","../node_modules/semver/ranges/to-comparators.js","../node_modules/semver/ranges/valid.js"],"sourcesContent":["import { TransportError } from \"@ledgerhq/errors\";\nexport type ResponseAcc =\n  | {\n      data: Buffer;\n      dataLength: number;\n      sequence: number;\n    }\n  | null\n  | undefined;\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n      const blocks: Buffer[] = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): Buffer | null | undefined {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n","import semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nexport enum DeviceModelId {\n  blue = \"blue\",\n  nanoS = \"nanoS\",\n  nanoSP = \"nanoSP\",\n  nanoX = \"nanoX\",\n  nanoFTS = \"nanoFTS\",\n}\n\nconst devices: { [key in DeviceModelId]: DeviceModel } = {\n  [DeviceModelId.blue]: {\n    id: DeviceModelId.blue,\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    masks: [0x31000000, 0x31010000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  [DeviceModelId.nanoS]: {\n    id: DeviceModelId.nanoS,\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    masks: [0x31100000],\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion) ?? \"\", \"2.0.0\")\n        ? 4 * 1024\n        : 2 * 1024,\n  },\n  [DeviceModelId.nanoSP]: {\n    id: DeviceModelId.nanoSP,\n    productName: \"Ledger Nano S Plus\",\n    productIdMM: 0x50,\n    legacyUsbProductId: 0x0005,\n    usbOnly: true,\n    memorySize: 1536 * 1024,\n    masks: [0x33100000],\n    getBlockSize: (_firmwareVersion: string): number => 32,\n  },\n  [DeviceModelId.nanoX]: {\n    id: DeviceModelId.nanoX,\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    masks: [0x33000000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-0004-0003-4c6564676572\",\n      },\n    ],\n  },\n  [DeviceModelId.nanoFTS]: {\n    id: DeviceModelId.nanoFTS,\n    productName: \"Ledger Nano FTS\",\n    productIdMM: 0x60,\n    legacyUsbProductId: 0x0006,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024, // ← ↓ TODO Update with actual values\n    masks: [0x33200000],\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        serviceUuid: \"13d63400-2c97-6004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-6004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-6004-0002-4c6564676572\",\n        writeCmdUuid: \"13d63400-2c97-6004-0003-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: DeviceModelId.blue,\n  \"Nano S\": DeviceModelId.nanoS,\n  \"Nano S Plus\": DeviceModelId.nanoSP,\n  \"Nano X\": DeviceModelId.nanoX,\n  \"Nano FTS\": DeviceModelId.nanoFTS,\n};\n\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n * Given a `targetId`, return the deviceModel associated to it,\n * based on the first two bytes.\n */\nexport const identifyTargetId = (\n  targetId: number\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find(({ masks }) =>\n    masks.find((mask) => (targetId & 0xffff0000) === mask)\n  );\n\n  return deviceModel;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (\n  usbProductId: number\n): DeviceModel | null | undefined => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (\n  productName: string\n): DeviceModel | null | undefined => {\n  const deviceModel = devicesList.find((d) => d.id === productMap[productName]);\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: Record<string, BluetoothInfos> = {};\n\nfor (const id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = {\n        deviceModel,\n        ...spec,\n      };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = (): string[] => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (\n  uuid: string\n): BluetoothInfos | undefined => serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport interface DeviceModel {\n  id: DeviceModelId;\n  productName: string;\n  productIdMM: number;\n  legacyUsbProductId: number;\n  usbOnly: boolean;\n  memorySize: number;\n  masks: number[];\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number;\n  bluetoothSpec?: {\n    serviceUuid: string;\n    writeUuid: string;\n    writeCmdUuid: string;\n    notifyUuid: string;\n  }[];\n}\n\n/**\n *\n */\nexport interface BluetoothInfos {\n  deviceModel: DeviceModel;\n  serviceUuid: string;\n  writeUuid: string;\n  writeCmdUuid: string;\n  notifyUuid: string;\n}\n","export type TraceContext = Record<string, unknown>;\nexport type LogData = any;\nexport type LogType = string;\n\n/**\n * A Log object\n */\nexport interface Log {\n  /**\n   * A namespaced identifier of the log (not a level like \"debug\", \"error\" but more like \"apdu\", \"hw\", etc...)\n   */\n  type: LogType;\n  message?: string;\n  /**\n   * Data associated to the log event\n   */\n  data?: LogData;\n  /**\n   * Context data, coming for example from the caller's parent, to enable a simple tracing system\n   */\n  context?: TraceContext;\n  /**\n   * Unique id among all logs\n   */\n  id: string;\n  /*\n   * Date when the log occurred\n   */\n  date: Date;\n}\n\nexport type Unsubscribe = () => void;\nexport type Subscriber = (arg0: Log) => void;\n\nlet id = 0;\nconst subscribers: Subscriber[] = [];\n\n/**\n * Logs something\n *\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: LogType, message?: string, data?: LogData) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * A simple tracer function, only expanding the existing log function\n *\n * Its goal is to capture more context than a log function.\n * This is simple for now, but can be improved later.\n *\n * @param context Anything representing the context where the log occurred\n */\nexport const trace = ({\n  type,\n  message,\n  data,\n  context,\n}: {\n  type: LogType;\n  message?: string;\n  data?: LogData;\n  context?: TraceContext;\n}) => {\n  const obj: Log = {\n    type,\n    id: String(++id),\n    date: new Date(),\n  };\n\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  if (context) obj.context = context;\n\n  dispatch(obj);\n};\n\n/**\n * A simple tracer class, that can be used to avoid repetition when using the `trace` function\n *\n * Its goal is to capture more context than a log function.\n * This is simple for now, but can be improved later.\n *\n * @param type A given type (not level) for the current local tracer (\"hw\", \"withDevice\", etc.)\n * @param context Anything representing the context where the log occurred\n */\nexport class LocalTracer {\n  constructor(\n    private type: LogType,\n    private context?: TraceContext,\n  ) {}\n\n  trace(message: string, data?: TraceContext) {\n    trace({\n      type: this.type,\n      message,\n      data,\n      context: this.context,\n    });\n  }\n\n  getContext(): TraceContext | undefined {\n    return this.context;\n  }\n\n  setContext(context?: TraceContext) {\n    this.context = context;\n  }\n\n  updateContext(contextToAdd: TraceContext) {\n    this.context = { ...this.context, ...contextToAdd };\n  }\n\n  getType(): LogType {\n    return this.type;\n  }\n\n  setType(type: LogType) {\n    this.type = type;\n  }\n\n  /**\n   * Create a new instance of the LocalTracer with an updated `type`\n   *\n   * It does not mutate the calling instance, but returns a new LocalTracer,\n   * following a simple builder pattern.\n   */\n  withType(type: LogType): LocalTracer {\n    return new LocalTracer(type, this.context);\n  }\n\n  /**\n   * Create a new instance of the LocalTracer with a new `context`\n   *\n   * It does not mutate the calling instance, but returns a new LocalTracer,\n   * following a simple builder pattern.\n   *\n   * @param context A TraceContext, that can undefined to reset the context\n   */\n  withContext(context?: TraceContext): LocalTracer {\n    return new LocalTracer(this.type, context);\n  }\n\n  /**\n   * Create a new instance of the LocalTracer with an updated `context`,\n   * on which an additional context is merged with the existing one.\n   *\n   * It does not mutate the calling instance, but returns a new LocalTracer,\n   * following a simple builder pattern.\n   */\n  withUpdatedContext(contextToAdd: TraceContext): LocalTracer {\n    return new LocalTracer(this.type, { ...this.context, ...contextToAdd });\n  }\n}\n\n/**\n * Adds a subscribers to the emitted logs.\n *\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: Subscriber): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\n\ndeclare global {\n  interface Window {\n    __ledgerLogsListen: any;\n  }\n}\n\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [\n  {\n    vendorId: ledgerUSBVendorId,\n  },\n];\n\nconst isSupported = () =>\n  Promise.resolve(!!(window.navigator && window.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices,\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\nexport default class TransportWebHID extends Transport {\n  device: HIDDevice;\n  deviceModel: DeviceModel | null | undefined;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel =\n      typeof device.productId === \"number\"\n        ? identifyUSBProductId(device.productId)\n        : undefined;\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs: Buffer[] = [];\n  inputCallback: ((arg0: Buffer) => void) | null | undefined;\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve((this.inputs.shift() as unknown) as Buffer);\n    }\n\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n  onInputReport = (e: HIDInputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel =\n            typeof device.productId === \"number\"\n              ? identifyUSBProductId(device.productId)\n              : undefined;\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n            deviceModel,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n\n    return {\n      unsubscribe,\n    };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = async (apdu: Buffer): Promise<Buffer> => {\n    const b = await this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize);\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n    return b as Buffer;\n  };\n\n  setScrambleKey() {}\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range\n      .trim()\n      .split(/\\s+/)\n      .join(' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => comps.join(' ').trim())\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n"],"names":["errors_1","require","asUInt16BE","value","b","Buffer","alloc","writeUInt16BE","initialAcc","data","dataLength","sequence","exports","channel","packetSize","makeBlocks","apdu","concat","length","blockSize","nbBlocks","Math","ceil","fill","blocks","i","head","writeUInt8","chunk","slice","push","reduceResponse","acc","_a","readUInt16BE","TransportError","readUInt8","chunkData","getReducedResult","DeviceModelId","devices","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","masks","getBlockSize","_firwareVersion","nanoS","firmwareVersion","semver","nanoSP","_firmwareVersion","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","writeCmdUuid","nanoFTS","devicesList","Object","values","ledgerUSBVendorId","identifyUSBProductId","usbProductId","legacy","find","d","mm","bluetoothServices","serviceUuidToInfos","deviceModel","spec","replace","__assign","subscribers","log","type","message","obj","String","date","Date","dispatch","listen","cb","indexOf","pop","e","console","error","window","__ledgerLogsListen","ledgerDevices","vendorId","isSupported","Promise","resolve","navigator","hid","getHID","requestLedgerDevices","requestDevice","filters","device","sent","Array","isArray","getLedgerDevices","getDevices","filter","TransportWebHID","_super","_this","call","floor","random","inputs","read","shift","success","inputCallback","onInputReport","buffer","from","_disconnectEmitted","_emitDisconnect","emit","exchange","__awaiter","this","exchangeAtomicImpl","toString","framing","hidFraming","sendReport","_b","result","includes","DisconnectedDeviceDuringOperation","productId","undefined","addEventListener","__extends","request","__read","apply","open","openConnected","transport","onDisconnect","removeEventListener","DisconnectedDevice","prototype","close","exchangeBusyPromise","setScrambleKey","list","observer","unsubscribed","existingDevices","getFirstLedgerDevice","then","next","descriptor","complete","TransportOpenUserCancelled","unsubscribe","Transport","cachedSetTimeout","cachedClearTimeout","process","module","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","arguments","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","ANY","Symbol","Comparator","constructor","comp","options","parseOptions","loose","trim","split","join","debug","parse","operator","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","SemVer","test","er","cmp","intersects","Range","includePrerelease","startsWith","safeRe","range","raw","set","format","map","parseRange","c","first","isNullSet","isAny","comps","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","get","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","Map","comparators","size","has","delete","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","testComparator","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","compare","other","compareMain","comparePre","a","compareBuild","inc","release","identifier","identifierBase","base","Number","isNaN","clean","s","eq","neq","gt","gte","lt","lte","op","coerce","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","exec","index","lastIndex","COERCEFULL","COERCE","versionA","versionB","compareLoose","diff","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","throwErrors","parsed","rcompare","rsort","sort","satisfies","valid","v","internalRe","constants","identifiers","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","NODE_DEBUG","_len","_key","numeric","anum","bnum","max","key","firstKey","keys","looseOption","freeze","emptyOpts","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","isGlobal","safe","token","makeSafeRegex","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","LONETILDE","LONECARET","r1","r2","maxSV","rangeObj","forEach","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","prev","ranges","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub"],"sourceRoot":""}